import random
import re

class RuleBot:
    ## response
    negative_res = ("no","nope","nah","not this time","better luck next time")
    exit_commands = ("quit","pause","exit","goodbye","saayonara","accha kbhi milte h")
    
    random_questions = (
        "🍕 What’s your all-time favorite comfort food? ",
        "🥗 Do you prefer sweet or savory snacks? ",
        "🍫 If you could only eat one dessert for the rest of your life, what would it be? ",
        "🍔 What’s the weirdest food combination you’ve ever tried? ",
        "🌮 If you had to pick: pizza or burgers? ",
        "🍣 Do you like trying new cuisines or stick to familiar foods? ",
        "🥤 What’s your go-to drink when eating out? ",
        "🍜 If you were a chef for one day, what dish would you cook? ",
        "🍎 Do you prefer fruits or vegetables? ",
        "🍩 Midnight snack: sweet or salty? "
    )
    
    # sample Italian menu
    menu = {
        "margherita pizza": 300,
        "pasta alfredo": 400,
        "spaghetti aglio e olio": 250,
        "lasagna": 500,
        "tiramisu": 200,
        "gelato": 150
    }
    
    def __init__(self):
        self.order = []   # store items user orders
        self.foodbabble = {
            'describe_food_interest': r'.*\s*your food.*',
            'answer_why_tasty': r'.*coz of taste.*',
            'about_price': r'.*\s*price.*',
            'order_food': r'.*(order|buy|eat|want).*'
        }
    
    def greet(self):
        self.name = input("What is your name?\n")
        self.age = input("What is your age?\n")
        will_help = input(
            f"Hi {self.name}, I am Jarvis. I can help you decide and even order your food. Shall we continue?\n"
        ).lower()
        
        if will_help in self.negative_res:
            print("May you find something tasty outside in another store.")
            return 
        self.chat()
        
    def make_exit(self, reply):
        for command in self.exit_commands:
            if reply.strip() == command:
                print("Thank you for visiting! 👋")
                return True
        return False

    def chat(self):
        reply = input(random.choice(self.random_questions)).lower()
        while not self.make_exit(reply):
            reply = input(self.match_reply(reply)).lower()
    
    def match_reply(self, reply):
        for intent, regex_pattern in self.foodbabble.items():
            if re.match(regex_pattern, reply):
                if intent == 'describe_food_interest':
                    return self.describe_food_interest()
                elif intent == 'answer_why_tasty':
                    return self.answer_why_tasty()
                elif intent == 'about_price':
                    return self.about_price()
                elif intent == 'order_food':
                    return self.order_food()
        return self.no_match_intent()
    
    def describe_food_interest(self):
        responses = (
            "My cafe name is Alfredo Bin Ulli. 🍴\n",
            "Here coffee is good, and we serve only Italian food that is worth the price. 🇮🇹\n"
        )
        return random.choice(responses)
    
    def answer_why_tasty(self):
        responses = (
            "Because nothing beats the taste of fresh Italian pasta 🍝\n",
            "It’s all about the perfect blend of herbs and olive oil 🌿\n",
            "Cheese, tomatoes, and a crispy crust — that’s the magic of pizza 🍕\n",
            "The taste comes from generations of Italian tradition 🇮🇹\n",
            "Fresh ingredients make every bite unforgettable 🧄🍅\n"
        )
        return random.choice(responses)
    
    def about_price(self):
        responses = (
            "A classic Margherita pizza usually costs around ₹250–₹400 🍕\n",
            "Fresh pasta dishes in restaurants are often priced between ₹300–₹500 🍝\n",
            "Italian gelato is surprisingly affordable — usually ₹100–₹200 per scoop 🍨\n",
            "A simple plate of spaghetti aglio e olio can be found for just ₹150–₹250 🍅🧄\n",
            "Even fine-dining Italian meals usually range from ₹600–₹1200 🍽️\n"
        )
        return random.choice(responses)
    
    def order_food(self):
        print("\nHere’s our Italian Menu: 🍽️")
        for item, price in self.menu.items():
            print(f"- {item.title()} : ₹{price}")
        
        choice = input("\nWhat would you like to order? (type item name)\n").lower()
        
        if choice in self.menu:
            self.order.append((choice, self.menu[choice]))
            more = input(f"{choice.title()} added! Would you like to order more? (yes/no)\n").lower()
            if more == "yes":
                return self.order_food()
            else:
                return self.final_bill()
        else:
            return "Sorry, we don’t have that item. Please choose from the menu.\n"
    
    def final_bill(self):
        print("\nYour Order Summary 🧾:")
        subtotal = 0
        for item, price in self.order:
            print(f"- {item.title()} : ₹{price}")
            subtotal += price
        
        tax = subtotal * 0.10   # 10% GST
        gross_total = subtotal + tax
        
        print(f"\nSubtotal: ₹{subtotal}")
        print(f"Tax (10%): ₹{tax:.2f}")
        print(f"👉 Gross Bill: ₹{gross_total:.2f}")
        
        return "Would you like to confirm your order? (yes/no)\n"
    
    def no_match_intent(self):
        responses = (
            "Please tell me more.\n",
            "Tell me more! 🤔\n",
            "I see. Can you elaborate?\n",
            "Interesting… can you tell me more?\n",
            "I see. How do you think?\n",
            "Why?\n",
            "How do you think I feel when I say that? Why?\n"
        )
        return random.choice(responses)


# Run the bot
bot = RuleBot()
bot.greet()
